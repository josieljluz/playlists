name: üóëÔ∏è Excluir Arquivos + üßπ Limpar Execu√ß√µes + üöÄ Disparar Deploy

on:
  schedule:
    - cron: '0 15 * * *'  # Executa √†s 12h BRT (15h UTC) - Exclus√£o de arquivos
    - cron: '1 */12 * * *'  # Executa a cada 12 horas - Limpeza de execu√ß√µes
    - cron: '25 10 * * *'  # 10h UTC (7h BRT) - Disparar deploy
  workflow_dispatch:

permissions:
  contents: write
  actions: write

env:
  TZ: America/Fortaleza

jobs:
  delete-files:
    runs-on: ubuntu-latest
    steps:
      - name: ‚è∞ Configurar fuso hor√°rio
        run: |
          sudo timedatectl set-timezone America/Fortaleza
          date

      - name: üßæ Clonar reposit√≥rio
        uses: actions/checkout@v3

      - name: üóëÔ∏è Excluir arquivos da raiz
        run: |
          # rm -f 3wk1y24kx7uzdevxygz7
          # rm -f 782dyqdrqkh1xegen4zp
          # rm -f PiauiTV.m3u
          # rm -f epgbrasil.m3u
          # rm -f epgbrasil.xml
          # rm -f epgbrasil.xml.gz
          # rm -f epgbrasilportugal.m3u
          # rm -f epgbrasilportugal.xml
          # rm -f epgbrasilportugal.xml.gz
          # rm -f epgportugal.m3u
          # rm -f epgportugal.xml
          # rm -f epgportugal.xml.gz
          # rm -f jq2zy9epr3bwxmgwyxr5
          # rm -f m3u4u_proton.me.m3u
          # rm -f m3u@proton.me.m3u
          # rm -f piauitv.m3u
          # rm -f playlist.m3u
          # rm -f playlists.log
          # rm -f playlists.m3u
          # rm -f pornstars.m3u
          # rm -f proton.m3u
          rm -f coroa_vidaloka-20250609-0001.mp4
          rm -f majormarra-20250624-0003.mp4
          rm -f mentalidade_autoritaria-20250618-0001.jpg
          rm -f marinahelenabr-20250712-0001.jpg
          
          
          
          rm -f x - index.htmll
          rm -f xx - index.htmll
          rm -f xxx - index.htmll
          rm -f xxx-index.htmll
          
          rm -f downloads_files.py.py
          

      - name: ‚úÖ Commit e Push
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add .
          git commit -m "üóëÔ∏è Excluir arquivos via GitHub Actions (agendado)" || echo "Nada a commitar"
          git push https://x-access-token:${TOKEN}@github.com/${{ github.repository }}.git HEAD:main

  cleanup:
    runs-on: ubuntu-latest
    needs: delete-files
    steps:
      - name: üóëÔ∏è Deletar execu√ß√µes de workflow antigas
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "üîç Iniciando verifica√ß√£o de execu√ß√µes com mais de 1 horas..."
          now=$(date -u +%s)
          per_page=100
          page=1
          deleted=0

          while true; do
            echo "üìÑ Buscando p√°gina $page de execu√ß√µes..."
            runs=$(gh api \
              -H "Accept: application/vnd.github.v3+json" \
              "/repos/${{ github.repository }}/actions/runs?per_page=$per_page&page=$page" \
              --jq '.workflow_runs[] | {id, created_at, status}')

            if [ -z "$runs" ]; then
              echo "‚úÖ Nenhuma execu√ß√£o encontrada na p√°gina $page. Fim da pagina√ß√£o."
              break
            fi

            echo "$runs" | jq -c 'select(.created_at != null)' | while read -r run; do
              id=$(echo "$run" | jq -r '.id')
              created_at=$(echo "$run" | jq -r '.created_at')

              if date -u -d "$created_at" >/dev/null 2>&1; then
                run_date=$(date -u -d "$created_at" +%s)
              elif date -u -j -f "%Y-%m-%dT%H:%M:%SZ" "$created_at" >/dev/null 2>&1; then
                run_date=$(date -u -j -f "%Y-%m-%dT%H:%M:%SZ" "$created_at" +%s)
              else
                echo "‚ö†Ô∏è Data inv√°lida: $created_at"
                continue
              fi

              diff_hours=$(( (now - run_date) / 3600 ))

              if [ "$diff_hours" -ge 1 ]; then
                echo "üóëÔ∏è Deletando execu√ß√£o ID: $id (Criada h√° $diff_hours horas)"
                gh api \
                  --method DELETE \
                  -H "Accept: application/vnd.github.v3+json" \
                  "/repos/${{ github.repository }}/actions/runs/$id" \
                  >/dev/null 2>&1 && deleted=$((deleted + 1)) || echo "‚ö†Ô∏è Falha ao deletar execu√ß√£o ID: $id"
              else
                echo "‚úÖ Execu√ß√£o ID: $id tem apenas $diff_hours horas ‚Äî ser√° mantida."
              fi
            done

            page=$((page + 1))
          done

          echo "üèÅ Processo conclu√≠do. Total de execu√ß√µes deletadas: $deleted"

  deploy:
    runs-on: ubuntu-latest
    needs: cleanup
    environment: production
    steps:
      - name: Executar deploy do pages-build-deployment
        run: |
          curl -X POST \
            -H "Authorization: token $TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/pages-build-deployment.yml/dispatches \
            -d '{"ref":"main"}'
        env:
          TOKEN: ${{ secrets.GH_DEPLOY_TOKEN }}
