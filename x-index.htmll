<!DOCTYPE html>
<html lang="pt-BR" data-theme="system">
<head>
  <!-- Metadados básicos otimizados -->
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="description" content="Playlists M3U e EPG para IPTV mantidas por Josiel Jefferson">
  <meta name="keywords" content="iptv, m3u, epg, playlists, Josiel Jefferson">
  <meta name="author" content="Josiel Jefferson">
  
  <!-- Metadados Open Graph melhorados -->
  <meta property="og:title" content="Playlists M3U e EPG para IPTV">
  <meta property="og:description" content="Acesse playlists M3U e guias EPG atualizados para IPTV">
  <meta property="og:type" content="website">
  <meta property="og:url" content="https://seusite.com">
  <meta property="og:image" content="https://seusite.com/imagem-compartilhamento.jpg">
  
  <!-- Configuração de tema otimizada -->
  <meta name="color-scheme" content="light dark">
  <meta name="theme-color" content="#ffffff" media="(prefers-color-scheme: light)">
  <meta name="theme-color" content="#121212" media="(prefers-color-scheme: dark)">
  
  <title>Playlists M3U e EPG para IPTV</title>
  
  <!-- Pré-carregamento otimizado -->
  <link rel="preconnect" href="https://cdnjs.cloudflare.com" crossorigin>
  <link rel="preconnect" href="https://github.com" crossorigin>
  <link rel="preload" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" as="style">
  
  <!-- Carregamento de fontes com fallback robusto -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
        integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw=="
        crossorigin="anonymous"
        referrerpolicy="no-referrer" />
  
  <!-- CSS crítico otimizado -->
  <style>
    /* Variáveis CSS modernizadas com fallbacks */
    :root {
      color-scheme: light dark;
      --primary-color: #2563eb;
      --primary-hover: #1d4ed8;
      --secondary-color: #2980b9;
      --text-color: #1e293b;
      --text-color-dark: #f1f5f9;
      --bg-color: #ffffff;
      --bg-color-dark: #0f172a;
      --border-color: #e2e8f0;
      --border-color-dark: #334155;
      --card-bg: #f8fafc;
      --card-bg-dark: #1e293b;
      --error-color: #e74c3c;
      --transition: 0.2s ease;
    }
    
    [data-theme="dark"] {
      --primary-color: #3b82f6;
      --primary-hover: #60a5fa;
      --secondary-color: #4a9ff5;
      --text-color: var(--text-color-dark);
      --bg-color: var(--bg-color-dark);
      --border-color: var(--border-color-dark);
      --card-bg: var(--card-bg-dark);
    }
    
    /* Reset moderno com melhor acessibilidade */
    *, *::before, *::after {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    /* Base estilizada para melhor legibilidade */
    html {
      scroll-behavior: smooth;
    }
    
    body {
      font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, 
                   Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
      line-height: 1.6;
      color: var(--text-color);
      background-color: var(--bg-color);
      transition: background-color var(--transition), color var(--transition);
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      padding: 20px;
    }
    
    /* Melhorias no cabeçalho */
    header, footer {
      padding: clamp(1rem, 2vw, 1.5rem);
      text-align: center;
    }
    
    header {
      border-bottom: 1px solid var(--border-color);
      background-color: var(--card-bg);
      border-radius: 8px;
      margin-bottom: 30px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }
    
    h1 {
      color: var(--primary-color);
      margin-bottom: 10px;
      font-size: clamp(1.5rem, 3vw, 1.8rem);
    }
    
    h2 {
      color: var(--secondary-color);
      margin-bottom: 20px;
      display: flex;
      align-items: center;
      gap: 10px;
      font-size: 1.3rem;
    }
    
    /* Layout responsivo básico para containers */
    .container {
      width: min(100% - 2rem, 1200px);
      margin-inline: auto;
    }
    
    main {
      display: grid;
      grid-template-columns: 1fr;
      gap: 30px;
      flex: 1;
    }
    
    section {
      background-color: var(--card-bg);
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      border: 1px solid var(--border-color);
    }
    
    .files-container {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
      gap: 20px;
    }
    
    .file-card {
      padding: 15px;
      border: 1px solid var(--border-color);
      border-radius: 8px;
      transition: transform var(--transition), box-shadow var(--transition), 
                 border-color var(--transition), background-color var(--transition);
      background-color: var(--bg-color);
    }
    
    .file-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }
    
    .file-card h3 {
      margin-bottom: 10px;
      color: var(--primary-color);
      display: flex;
      align-items: center;
      gap: 8px;
      font-size: 1.1rem;
    }
    
    .file-card p {
      margin-bottom: 8px;
      font-size: 0.9rem;
      color: color-mix(in srgb, var(--text-color) 85%, transparent);
    }
    
    .file-card a {
      display: inline-block;
      margin-top: 10px;
      padding: 8px 15px;
      background-color: var(--primary-color);
      color: white;
      text-decoration: none;
      border-radius: 4px;
      transition: background-color var(--transition);
      font-size: 0.9rem;
    }
    
    .file-card a:hover {
      background-color: var(--primary-hover);
    }
    
    .loading-card {
      text-align: center;
      padding: 30px;
      grid-column: 1 / -1;
    }
    
    .loading-spinner {
      width: 40px;
      height: 40px;
      margin: 0 auto 15px;
      border: 4px solid rgba(0, 0, 0, 0.1);
      border-radius: 50%;
      border-top-color: var(--primary-color);
      animation: spin 1s ease-in-out infinite;
    }
    
    @keyframes spin {
      to { transform: rotate(360deg); }
    }
    
    .error-message {
      grid-column: 1 / -1;
      text-align: center;
      padding: 20px;
      color: var(--error-color);
      background-color: color-mix(in srgb, var(--error-color) 10%, transparent);
      border-radius: 8px;
      border: 1px solid color-mix(in srgb, var(--error-color) 30%, transparent);
    }
    
    #metadata-info {
      margin-top: 15px;
      padding: 15px;
      background-color: color-mix(in srgb, var(--primary-color) 5%, transparent);
      border-radius: 8px;
      font-size: 0.9rem;
      border: 1px solid var(--border-color);
    }
    
    #metadata-info p {
      margin-bottom: 5px;
    }
    
    footer {
      text-align: center;
      margin-top: 40px;
      padding: 20px;
      font-size: 0.9rem;
      color: color-mix(in srgb, var(--text-color) 60%, transparent);
      border-top: 1px solid var(--border-color);
    }
    
    footer a {
      color: var(--primary-color);
      text-decoration: none;
      transition: color var(--transition);
    }
    
    footer a:hover {
      color: var(--primary-hover);
      text-decoration: underline;
    }
    
    .social-links {
      display: flex;
      justify-content: center;
      gap: 15px;
      margin: 15px 0;
      flex-wrap: wrap;
    }
    
    .social-link {
      color: var(--text-color);
      transition: color var(--transition), transform var(--transition);
      font-size: 1.2rem;
    }
    
    .social-link:hover {
      color: var(--primary-color);
      transform: translateY(-2px);
    }
    
    /* Controles de tema e ordenação */
    .controls {
      display: flex;
      flex-wrap: wrap;
      gap: 15px;
      margin-bottom: 20px;
      justify-content: center;
    }
    
    .control-group {
      display: flex;
      align-items: center;
      gap: 8px;
    }
    
    .control-group label {
      font-size: 0.9rem;
    }
    
    .control-group select {
      padding: 6px 10px;
      border-radius: 4px;
      border: 1px solid var(--border-color);
      background-color: var(--bg-color);
      color: var(--text-color);
      font-size: 0.9rem;
      cursor: pointer;
    }
    
    @media (max-width: 768px) {
      .files-container {
        grid-template-columns: 1fr;
      }
      
      .controls {
        flex-direction: column;
        align-items: center;
      }
    }
  </style>
</head>
<body>
  <!-- Cabeçalho semântico melhorado -->
  <header role="banner">
    <div class="container">
      <h1><i class="fas fa-tv"></i> Playlists M3U e EPG para IPTV</h1>
      <p>Atualizado automaticamente - Última atualização: <span id="last-update"></span></p>
      <div id="metadata-info"></div>
      
      <!-- Controles de interface melhorados -->
      <div class="controls">
        <div class="control-group">
          <label for="sort">Ordenar por:</label>
          <select id="sort" aria-label="Ordenar arquivos">
            <option value="name">Nome (A-Z)</option>
            <option value="nameDesc">Nome (Z-A)</option>
            <option value="date">Data (Mais recentes)</option>
            <option value="dateOldest">Data (Mais antigo)</option>
            <option value="size">Tamanho (Maior)</option>
            <option value="sizeSmallest">Tamanho (Menor)</option>
            <option value="type">Tipo (A-Z)</option>
            <option value="typeDesc">Tipo (Z-A)</option>
          </select>
        </div>
        <div class="control-group">
          <label for="theme">Tema:</label>
          <select id="theme" aria-label="Escolher tema">
            <option value="light">Claro</option>
            <option value="dark">Escuro</option>
            <option value="system" selected>Sistema</option>
          </select>
        </div>
      </div>
    </div>
  </header>

  <!-- Conteúdo principal semântico -->
  <main id="main-content" role="main" class="container">
    <section id="playlists" aria-labelledby="playlists-heading">
      <h2 id="playlists-heading"><i class="fas fa-list"></i> Playlists M3U</h2>
      <div class="files-container" id="m3u-files" aria-live="polite">
        <div class="loading-card">
          <div class="loading-spinner" aria-hidden="true"></div>
          <p>Carregando playlists...</p>
        </div>
      </div>
    </section>

    <section id="epg" aria-labelledby="epg-heading">
      <h2 id="epg-heading"><i class="fas fa-calendar-alt"></i> Guias EPG</h2>
      <div class="files-container" id="epg-files" aria-live="polite">
        <div class="loading-card">
          <div class="loading-spinner" aria-hidden="true"></div>
          <p>Carregando guias EPG...</p>
        </div>
      </div>
    </section>
  </main>

  <!-- Rodapé semântico melhorado -->
  <footer role="contentinfo">
    <div class="container">
      <p>Projeto mantido por <a href="https://github.com/josieljluz" target="_blank" rel="noopener noreferrer">Josiel Jefferson</a></p>
      
      <!-- Links sociais acessíveis -->
      <div class="social-links" aria-label="Redes sociais">
        <a href="https://github.com/josieljluz" target="_blank" rel="noopener noreferrer" class="social-link" aria-label="GitHub (abre em nova janela)">
          <i class="fab fa-github" aria-hidden="true"></i>
        </a>
        <a href="https://gitlab.com/josieljluz" target="_blank" rel="noopener noreferrer" class="social-link" aria-label="GitLab (abre em nova janela)">
          <i class="fab fa-gitlab" aria-hidden="true"></i>
        </a>
        <a href="https://wa.me/+5589981073340" target="_blank" rel="noopener noreferrer" class="social-link" aria-label="WhatsApp (abre em nova janela)">
          <i class="fab fa-whatsapp" aria-hidden="true"></i>
        </a>
        <a href="https://t.me/ElectronSpeedX" target="_blank" rel="noopener noreferrer" class="social-link" aria-label="Telegram (abre em nova janela)">
          <i class="fab fa-telegram" aria-hidden="true"></i>
        </a>
        <a href="https://facebook.com/josieljeff" target="_blank" rel="noopener noreferrer" class="social-link" aria-label="Facebook (abre em nova janela)">
          <i class="fab fa-facebook-f" aria-hidden="true"></i>
        </a>
        <a href="https://instagram.com/josieljeff" target="_blank" rel="noopener noreferrer" class="social-link" aria-label="Instagram (abre em nova janela)">
          <i class="fab fa-instagram" aria-hidden="true"></i>
        </a>
        <a href="https://twitter.com/josieljeff" target="_blank" rel="noopener noreferrer" class="social-link" aria-label="Twitter (abre em nova janela)">
          <i class="fab fa-twitter" aria-hidden="true"></i>
        </a>
        <a href="https://www.threads.net/@josieljeff" target="_blank" rel="noopener noreferrer" class="social-link" aria-label="Threads (abre em nova janela)">
          <i class="fab fa-threads" aria-hidden="true"></i>
        </a>
        <a href="https://tiktok.com/@josieljeff" target="_blank" rel="noopener noreferrer" class="social-link" aria-label="TikTok (abre em nova janela)">
          <i class="fab fa-tiktok" aria-hidden="true"></i>
        </a>
        <a href="https://linkedin.com/in/josieljeff" target="_blank" rel="noopener noreferrer" class="social-link" aria-label="LinkedIn (abre em nova janela)">
          <i class="fab fa-linkedin-in" aria-hidden="true"></i>
        </a>
        <a href="mailto:josiel@example.com" class="social-link" aria-label="Enviar e-mail">
          <i class="fas fa-envelope" aria-hidden="true"></i>
        </a>
        <a href="https://x.com/josieljeff" target="_blank" rel="noopener noreferrer" class="social-link" aria-label="X (Twitter) (abre em nova janela)">
          <i class="fab fa-x-twitter" aria-hidden="true"></i>
        </a>
        <a href="https://bitbucket.org/josieljluz" target="_blank" rel="noopener noreferrer" class="social-link" aria-label="Bitbucket (abre em nova janela)">
          <i class="fab fa-bitbucket" aria-hidden="true"></i>
        </a>
      </div>
      
      <!-- Informação de build com data dinâmica -->
      <p>© <span id="current-year"></span> Playlists IPTV - Todos os direitos reservados</p>
      <p class="build-info">Última atualização: <time id="build-date" datetime=""></time></p>
    </div>
  </footer>
  
  <script>
    /**
     * Função principal para inicialização otimizada
     */
    document.addEventListener('DOMContentLoaded', () => {
      // Configuração do tema aprimorada
      const setupTheme = () => {
        const getSystemTheme = () => 
          window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
        
        const applyTheme = (theme) => {
          document.documentElement.setAttribute('data-theme', 
            theme === 'system' ? getSystemTheme() : theme);
        };
        
        const savedTheme = localStorage.getItem('theme') || 'system';
        applyTheme(savedTheme);
        
        // Atualiza o select
        const themeSelect = document.getElementById('theme');
        if (themeSelect) {
          themeSelect.value = savedTheme;
          themeSelect.addEventListener('change', (e) => {
            localStorage.setItem('theme', e.target.value);
            applyTheme(e.target.value);
          });
        }
        
        // Observa mudanças no tema do sistema
        window.matchMedia('(prefers-color-scheme: dark)')
          .addEventListener('change', () => {
            if (localStorage.getItem('theme') === 'system') {
              applyTheme('system');
            }
          });
      };
      
      // Atualização de datas otimizada
      const updateDates = () => {
        const formatDate = (date) => 
          new Intl.DateTimeFormat('pt-BR', {
            day: '2-digit',
            month: '2-digit',
            year: 'numeric',
            hour: '2-digit',
            minute: '2-digit',
            second: '2-digit',
            hour12: false
          }).format(date).replace(',', ' -');
        
        const updateLastUpdateTime = () => {
          const now = new Date();
          const options = { 
            weekday: 'long', 
            year: 'numeric', 
            month: 'long', 
            day: 'numeric',
            hour: '2-digit',
            minute: '2-digit'
          };
          document.getElementById('last-update').textContent = now.toLocaleDateString('pt-BR', options);
          document.getElementById('build-date').textContent = formatDate(now);
          document.getElementById('build-date').setAttribute('datetime', now.toISOString());
        };
        
        updateLastUpdateTime();
        document.getElementById('current-year').textContent = new Date().getFullYear();
      };
      
      // Função para formatar tamanho de arquivo
      const formatFileSize = (bytes) => {
        if (bytes === 0) return '0 Bytes';
        const k = 1024;
        const sizes = ['Bytes', 'KB', 'MB', 'GB'];
        const i = Math.floor(Math.log(bytes) / Math.log(k));
        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
      };
      
      // Função para exibir metadados
      const displayMetadata = (metadata) => {
        const infoContainer = document.getElementById('metadata-info');
        const nextUpdate = new Date(metadata.next_update);
        
        infoContainer.innerHTML = `
          <p><strong>Total de arquivos:</strong> ${metadata.total_files} (${metadata.m3u_count} M3U, ${metadata.epg_count} EPG)</p>
          <p><strong>Próxima atualização:</strong> ${nextUpdate.toLocaleString('pt-BR')}</p>
        `;
      };
      
      // Função para exibir arquivos com ordenação
      const displayFiles = (files, sortMethod = 'name') => {
        const m3uContainer = document.getElementById('m3u-files');
        const epgContainer = document.getElementById('epg-files');
        
        // Ordena os arquivos conforme o método selecionado
        const sortedFiles = [...files].sort((a, b) => {
          switch(sortMethod) {
            case 'name':
              return a.name.localeCompare(b.name);
            case 'nameDesc':
              return b.name.localeCompare(a.name);
            case 'date':
              return new Date(b.updated) - new Date(a.updated);
            case 'dateOldest':
              return new Date(a.updated) - new Date(b.updated);
            case 'size':
              return b.size - a.size;
            case 'sizeSmallest':
              return a.size - b.size;
            case 'type':
              return a.type.localeCompare(b.type) || a.name.localeCompare(b.name);
            case 'typeDesc':
              return b.type.localeCompare(a.type) || a.name.localeCompare(b.name);
            default:
              return a.name.localeCompare(b.name);
          }
        });
        
        m3uContainer.innerHTML = '';
        epgContainer.innerHTML = '';
        
        let hasM3U = false;
        let hasEPG = false;
        
        sortedFiles.forEach(file => {
          const card = document.createElement('div');
          card.className = 'file-card';
          
          const icon = file.type === 'm3u' ? '<i class="fas fa-list" aria-hidden="true"></i>' : 
                      '<i class="fas fa-calendar-alt" aria-hidden="true"></i>';
          const fileType = file.type === 'm3u' ? 'Playlist M3U' : 'Guia EPG';
          
          card.innerHTML = `
            <h3>${icon} ${file.name}</h3>
            <p class="file-type">${fileType}</p>
            <p class="file-size">Tamanho: ${formatFileSize(file.size)}</p>
            <p class="file-updated">Atualizado: ${new Date(file.updated).toLocaleString('pt-BR')}</p>
            <a href="${file.name}" download>Baixar</a>
          `;
          
          if (file.type === 'm3u') {
            m3uContainer.appendChild(card);
            hasM3U = true;
          } else {
            epgContainer.appendChild(card);
            hasEPG = true;
          }
        });
        
        if (!hasM3U) {
          m3uContainer.innerHTML = '<div class="error-message">Nenhuma playlist M3U disponível no momento.</div>';
        }
        
        if (!hasEPG) {
          epgContainer.innerHTML = '<div class="error-message">Nenhum guia EPG disponível no momento.</div>';
        }
      };
      
      // Configura o listener para o select de ordenação
      const sortSelect = document.getElementById('sort');
      if (sortSelect) {
        sortSelect.addEventListener('change', (e) => {
          if (window.currentFiles) {
            displayFiles(window.currentFiles, e.target.value);
          }
        });
      }
      
      // Carrega os dados dos arquivos
      const loadFiles = () => {
        fetch('files_metadata.json')
          .then(response => response.json())
          .then(data => {
            window.currentFiles = data.files;
            displayFiles(data.files, sortSelect.value);
            displayMetadata(data.metadata);
          })
          .catch(error => {
            console.error('Erro ao carregar metadados:', error);
            document.getElementById('m3u-files').innerHTML = 
              '<div class="error-message">Erro ao carregar playlists. Tente atualizar a página.</div>';
            document.getElementById('epg-files').innerHTML = 
              '<div class="error-message">Erro ao carregar guias EPG. Tente atualizar a página.</div>';
          });
      };
      
      // Inicialização dos módulos
      setupTheme();
      updateDates();
      loadFiles();
    });
  </script>
</body>
</html>
